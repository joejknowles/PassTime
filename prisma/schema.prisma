// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PASSTIME_DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  firebaseId String   @unique
  email      String   @unique
  createdAt  DateTime @default(now())

  tasks         Task[]
  taskInstances TaskInstance[]
  balanceTargets BalanceTarget[]
}

model Task {
  id     Int     @id @default(autoincrement())
  title  String
  user   User    @relation(fields: [userId], references: [id])
  userId Int

  parentTasks Task[] @relation("ParentChildTasks")
  childTasks  Task[] @relation("ParentChildTasks")

  taskInstances TaskInstance[]
  balanceTargets BalanceTarget[]

  @@index([userId])
  @@index([title])
}

model TaskInstance {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  task   Task    @relation(fields: [taskId], references: [id])
  taskId Int
  startTime DateTime
  duration Int   @default(60)

  @@unique([userId, taskId, startTime])
}

enum TimeWindow {
  DAILY
  WEEKLY
}

model BalanceTarget {
  id           Int        @id @default(autoincrement())
  timeWindow   TimeWindow
  taskId       Int
  targetAmount Int
  userId       Int

  task         Task       @relation(fields: [taskId], references: [id])
  user         User       @relation(fields: [userId], references: [id])


  @@index([userId])
}
